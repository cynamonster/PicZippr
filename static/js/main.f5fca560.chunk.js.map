{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageList.js","components/Zip.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","number","onFormSubmit","e","preventDefault","_this","props","onSubmission","onKeywordSubmit","numberInput","focus","onKeywordChange","event","setState","target","value","onNumberChange","maxNumber","_this2","this","react_default","a","createElement","Grid","Row","Column","width","textAlign","Form","onSubmit","inverted","Field","Input","icon","Icon","name","onChange","placeholder","ref","input","onBlur","concat","className","type","React","Component","ImageList","images","IMAGES","length","map","image","src","urls","raw","thumbnail","thumb","thumbnailWidth","thumbnailHeight","height","caption","href","user","links","portfolio","imageFormatter","Gallery_default","enableImageSelection","backdropClosesModal","Zip","loading","urlZip","_this$props","formattedSearchTerm","searchTerm","replace","zip","JSZip","count","zipFilename","getUrls","Promise","resolve","reject","forEach","url","index","filename","unsplash","get","then","res","JSZipUtils","getBinaryContent","data","err","file","binary","generateAsync","content","saveAs","push","download_location","getLargeUrls","getFileName","_this$props2","buttonIcon","buttonContent","Button","fluid","positive","disabled","size","onClick","MAX_NUMBER_OF_IMAGES","App","desiredNumberOfImages","onSearchSubmit","params","query","per_page","response","console","log","results","handleNumberChange","onNumberValueChange","text","headerText","subheaderText","Container","Segment","padded","Header","as","style","color","opacity","components_SearchBar","Zip_Zip","components_ImageList","ReactDOM","render","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.f5fca560.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com/',\n    headers: {\n        Authorization: \n            'Client-ID ' + process.env.REACT_APP_API_KEY \n    }\n});","import React from 'react';\nimport { Form, Icon, Input, Grid } from 'semantic-ui-react'\nimport '../styles/styles.css'\n\nclass SearchBar extends React.Component {\n    state = {\n        term: '',\n        number: ''\n    };\n\n    onFormSubmit = e => {\n        e.preventDefault();\n        this.props.onSubmission(this.state.term, this.state.number);\n    }\n\n    onKeywordSubmit = (e) => {\n        e.preventDefault();\n        this.numberInput.focus();\n    }\n\n    onKeywordChange = (event) => {\n        this.setState({\n            term: event.target.value\n        })\n    }\n    \n    onNumberChange = (event) => {\n        const {value} = event.target;\n        if (value > this.props.maxNumber) {\n            this.setState({ number: this.props.maxNumber })\n        } else {\n            this.setState({ number: value })\n        }\n    }\n\n    render() {\n        return(\n            <Grid>\n                <Grid.Row>\n                    <Grid.Column width={8} textAlign='left'>\n                        <Form onSubmit={this.onKeywordSubmit} inverted>\n                            <Form.Field>\n                                <label>Search Term</label>\n                                <Input \n                                    icon={<Icon name='font' />}\n                                    value={this.state.term}\n                                    onChange={this.onKeywordChange} \n                                    placeholder='Search for business, people, design, architect, abstract...'\n                                />\n                            </Form.Field>\n                        </Form>\n                    </Grid.Column>\n                    <Grid.Column width={8} textAlign='left'>\n                        <Form onSubmit={this.onFormSubmit} inverted>\n                            <Form.Field>\n                                <label>Number of Images</label>\n                                <Input \n                                    ref={(input) => {this.numberInput = input}}\n                                    onBlur={this.onFormSubmit}\n                                    icon={<Icon name='search' />}\n                                    value={this.state.number}\n                                    onChange={this.onNumberChange} \n                                    placeholder={`Search for up to ${this.props.maxNumber} images...`}\n                                    className=\"dark-search\"\n                                    type='number'\n                                />\n                            </Form.Field>\n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        );\n    }\n}\n\nexport default SearchBar;","import React from 'react';\nimport '../styles/ImageList.css';\nimport Gallery from 'react-grid-gallery';\n\nconst imageFormatter = (image) => {\n    return {\n        'src': image.urls.raw,\n        'thumbnail': image.urls.thumb,\n        'thumbnailWidth': image.width,\n        'thumbnailHeight': image.height,\n        'caption': <p>Photo by <a href={image.user.links.portfolio + '?utm_source=yPicZippr&utm_medium=referral'}>{image.user.name}</a> on <a href=\"https://unsplash.com/?utm_source=PicZippr&utm_medium=referral\">Unsplash</a></p>\n    }\n}\n\nconst ImageList = props => {\n    const {images} = props;\n\n    const IMAGES = images.length > 0 ? images.map((image) => imageFormatter(image)) : [];\n\n    return IMAGES.length > 0 \n        ? <Gallery images={IMAGES} enableImageSelection={false} backdropClosesModal />\n        : null;\n}\n\nexport default ImageList;","import React from 'react'\nimport '../styles/zip.css'\nimport JSZip from 'jszip'\nimport JSZipUtils from 'jszip-utils'\nimport { saveAs } from 'save-as';\nimport unsplash from '../api/unsplash';\nimport {Button} from 'semantic-ui-react'\n\nexport default class Zip extends React.Component {\n    state = {\n        loading: false\n    };\n\n    urlZip = () => {\n        this.setState({\n            loading: true\n        });\n\n        const {images, searchTerm} = this.props;\n        const formattedSearchTerm = searchTerm.replace(' ','-');\n\n        var zip = new JSZip();\n        var count = 0;\n        var zipFilename = images.length + \"_\" + formattedSearchTerm + \"_images.zip\";\n        var urls = this.getUrls();\n      \n        const getImages = new Promise((resolve, reject) => {\n            urls.forEach(function(url, index){\n            var filename = formattedSearchTerm + \"_\" + (index + 1) + '.png';\n            unsplash.get(url)\n                .then(res => {\n                    JSZipUtils.getBinaryContent(res.data.url, function (err, data) {\n                        if(err) {\n                            throw err; // or handle the error\n                        }\n                        zip.file(filename, data, {binary:true});\n                        count++;\n                        if (count === urls.length) {\n                            resolve();\n                            zip.generateAsync({type:'blob'}).then(function(content) {\n                                saveAs(content, zipFilename);\n                            });\n                        }\n                    });\n                })\n            })\n        })\n\n        getImages.then(() => {\n            this.setState({\n                loading: false\n            })\n        });\n    };\n\n    getUrls = () => {\n        const {images} = this.props;\n\n        let urls = [];\n        images.map((image) => {\n            urls.push(image.links.download_location);\n        });\n\n        return urls;\n    }\n\n    getLargeUrls = () => {\n        const {images} = this.props;\n\n        let urls = [];\n        images.map((image) => {\n            urls.push(image.urls.thumb);\n        });\n\n        return urls;\n    }\n\n    getFileName = () => {\n        const {searchTerm, images} = this.props;\n        return images.length + '_' + searchTerm + '_images';\n    }\n\n    render() {\n        const buttonIcon = !this.props.images.length > 0\n            ? ''\n            : 'download';\n        const buttonContent = !this.props.images.length > 0\n            ? 'Search Images...'\n            : ' Download Zip'\n\n        return (\n            <Button \n                fluid\n                loading={this.state.loading || this.props.loading}\n                positive\n                disabled={!this.props.images.length > 0}\n                icon={buttonIcon}\n                size='big'\n                content={buttonContent}\n                onClick={this.urlZip}\n            />\n        )\n    }\n};","import React from 'react';\nimport unsplash from '../api/unsplash';\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\nimport Zip from './Zip';\nimport {Container, Header, Segment} from 'semantic-ui-react'\n\nconst DELL_PROFILE_LINK = 'https://www.wendellfernandes.com/';\nconst BEN_PROFILE_LINK = 'https://www.linkedin.com/in/bencynamon/';\nconst MAX_NUMBER_OF_IMAGES = 50;\n\nclass App extends React.Component {\n    state = {\n        images: [],\n        searchTerm: '',\n        desiredNumberOfImages: null,\n        loading: false\n    };\n\n    onSearchSubmit = (term, number) => {\n        this.setState({\n            searchTerm: term,\n            desiredNumberOfImages: number,\n            loading: true\n        }, () => {\n            unsplash.get('search/photos', {\n                params: {\n                    query: term,\n                    per_page: this.state.desiredNumberOfImages\n                }\n            }).then((response) => {\n                console.log(response)\n                this.setState({ \n                    images: response.data.results,\n                    loading: false\n                });\n            });\n        });\n    };\n\n    handleNumberChange = (event, data) => {\n        console.log(event)\n        console.log(data)\n    }\n\n    onNumberValueChange = e => { \n        const {value} = e.target;\n        if (value > 200) {\n            this.setState({ desiredNumberOfImages: MAX_NUMBER_OF_IMAGES })\n        } else {\n            this.setState({ desiredNumberOfImages: value })\n        }\n    }\n    // user chooses how many images they want to download\n    // user chooses what size photos they want : thumbnails, small, medium, large, raw\n    // that many images are queried, using user search query, and bundled into a zip.\n    // user downloads zip file\n\n    text = {\n        headerText: 'Bulk Image Gallery For Designers & Developers',\n        subheaderText: 'Digital Creators Need Placeholders For Their Web Projects – Search Below and Download Up to 50 Images'\n    };\n\n    \n    render() {\n        return(\n            <Container>\n                <Segment textAlign='center' inverted>\n\n                </Segment>\n                <Segment padded='very' textAlign='center' inverted>\n                    <Header inverted as='h1'>{this.text.headerText}</Header>\n                    <p style={{color: '#fff'}}>{this.text.subheaderText}</p>\n                    <p style={{color: '#fff', opacity: .8}}>Created by <a href={DELL_PROFILE_LINK}>Dell</a> and <a href={BEN_PROFILE_LINK}>Ben</a></p>\n                </Segment>\n\n                <Segment textAlign='center' inverted>\n                    <SearchBar \n                        onSubmission={this.onSearchSubmit} \n                        number={this.state.desiredNumberOfImages}\n                        maxNumber={MAX_NUMBER_OF_IMAGES} />\n                </Segment>\n\n                <Segment textAlign='center' inverted>\n                    <Zip images={this.state.images} \n                        searchTerm={this.state.searchTerm} \n                        loading={this.state.loading} />\n                </Segment>\n\n                \n                <Segment textAlign='center' inverted>\n                    <Header content={this.state.images.length > 0 ? 'Image Preview:' : ''} as='h2' />\n                    <ImageList images={this.state.images} term={this.state.searchTerm} />\n                </Segment>\n            </Container>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// components\nimport App from './components/App';\n\nReactDOM.render( <App />, document.querySelector('#root'));"],"sourceRoot":""}