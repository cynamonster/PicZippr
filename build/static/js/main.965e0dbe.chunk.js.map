{"version":3,"sources":["config.js","api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/Zip.js","components/App.js","index.js"],"names":["config","MY_KEY","SECRET_KEY","axios","create","baseURL","headers","Authorization","SearchBar","state","term","number","onFormSubmit","e","preventDefault","_this","props","onSubmission","onKeywordSubmit","numberInput","focus","onKeywordChange","event","setState","target","value","onNumberChange","_this2","this","react_default","a","createElement","Grid","Row","Column","width","textAlign","Form","onSubmit","inverted","Field","Input","icon","Icon","name","onChange","placeholder","ref","input","type","React","Component","ImageCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","_this$props$image","image","alt_description","urls","style","gridRowEnd","concat","alt","src","thumb","ImageList","images","IMAGES","length","map","raw","thumbnail","thumbnailWidth","thumbnailHeight","caption","user","portfolio_url","imageFormatter","index","NUMBER_OF_PREVIEW_IMAGES","ImageCard_ImageCard","key","id","className","Gallery_default","enableImageSelection","Zip","loading","urlZip","_this$props","formattedSearchTerm","searchTerm","replace","zip","JSZip","count","zipFilename","getUrls","forEach","url","filename","unsplash","get","then","res","JSZipUtils","getBinaryContent","data","err","file","binary","generateAsync","content","saveAs","setTimeout","push","links","download_location","getLargeUrls","getFileName","_this$props2","buttonIcon","buttonContent","Button","fluid","positive","disabled","size","onClick","App","desiredNumberOfImages","onSearchSubmit","params","query","per_page","response","console","log","results","handleNumberChange","onNumberValueChange","text","headerText","subheaderText","Container","Segment","padded","Header","as","color","components_SearchBar","Zip_Zip","components_ImageList","ReactDOM","render","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.965e0dbe.chunk.js","sourcesContent":["var config = {\n  MY_KEY: '0HYij4WT7URbTM6KZZwQMFYBEJj2PU7G_z4Pn3I0vxA',\n  SECRET_KEY: 'qVT0qjsuAKYEGoYjzcUhGVDOe4T1XNrJ_Yjj9bKzWS0',\n}\nexport default config;","import axios from 'axios';\nimport config from '../config'\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com/',\n    headers: {\n        Authorization: \n            'Client-ID ' + config.MY_KEY\n    }\n});","import React from 'react';\nimport { Form, Icon, Input, Grid, Button } from 'semantic-ui-react'\nimport '../styles/styles.css'\n\nclass SearchBar extends React.Component {\n    state = {\n        term: '',\n        number: ''\n    };\n\n    onFormSubmit = e => {\n        e.preventDefault();\n        this.props.onSubmission(this.state.term, this.state.number);\n    }\n\n    onKeywordSubmit = (e) => {\n        e.preventDefault();\n        this.numberInput.focus();\n    }\n\n    onKeywordChange = (event) => {\n        this.setState({\n            term: event.target.value\n        })\n    }\n    \n    onNumberChange = (event) => {\n        const {value} = event.target;\n        if (value > 200) {\n            this.setState({ number: 200 })\n        } else {\n            this.setState({ number: value })\n        }\n    }\n\n    render() {\n        return(\n            <Grid>\n                <Grid.Row>\n                    <Grid.Column width={8} textAlign='left'>\n                        <Form onSubmit={this.onKeywordSubmit} inverted>\n                            <Form.Field>\n                                <label>Search Term</label>\n                                <Input \n                                    icon={<Icon name='font' />}\n                                    value={this.state.term}\n                                    onChange={this.onKeywordChange} \n                                    placeholder='Search for business, people, design, architect, abstract...'\n                                />\n                            </Form.Field>\n                        </Form>\n                    </Grid.Column>\n                    <Grid.Column width={8} textAlign='left'>\n                        <Form onSubmit={this.onFormSubmit} inverted>\n                            <Form.Field>\n                                <label>Number of Images</label>\n                                <Input \n                                    ref={(input) => {this.numberInput = input}}\n                                    icon={<Icon name='search' />}\n                                    value={this.state.number}\n                                    onChange={this.onNumberChange} \n                                    placeholder='Maximum of 200'\n                                    type='number'\n                                />\n                            </Form.Field>\n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n\n                // <form className=\"ui segment\" onSubmit={ this.onFormSubmit }>\n                    // <div className=\"ui action input\">\n                    //     <input \n                    //         placeholder='Search...'\n                    //         type=\"text\" \n                    //         value={this.state.term} \n                \n                    //     />\n                    //     <div className=\"ui green large icon button\">\n                    //         Download {this.props.number} Images &nbsp; <i className=\"angle down icon\" />\n                    //     </div>\n                    // </div>\n                // </form>\n        );\n    }\n}\n\nexport default SearchBar;","import React from 'react';\n\nexport default class ImageCard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { spans: 0 };\n\n        this.imageRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n\n    setSpans = () => {\n        const height = this.imageRef.current.clientHeight;\n\n        const spans = Math.ceil(height / 10);\n\n        this.setState({ spans });\n    }\n\n    render() {\n        const { alt_description, urls } = this.props.image;\n        return (\n            <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n                <img \n                    ref={this.imageRef}\n                    alt={alt_description}\n                    src={urls.thumb}\n                />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport '../styles/ImageList.css';\nimport ImageCard from './ImageCard';\nimport Gallery from 'react-grid-gallery';\n\nconst NUMBER_OF_PREVIEW_IMAGES = 4;\n\n\n\nconst imageFormatter = (image) => {\n    return {\n        'src': image.urls.raw,\n        'thumbnail': image.urls.thumb,\n        'thumbnailWidth': image.width,\n        'thumbnailHeight': image.height,\n        'caption': image.user.portfolio_url ?  'Photo by ' + image.user.name + '. ' + image.user.portfolio_url : ''\n    }\n}\n\nconst ImageList = props => {\n    const {images} = props;\n    \n    const IMAGES = images.length > 0 ? images.map((image) => imageFormatter(image)) : [];\n    // console.log(IMAGES)\n    const renderImages = images.map((image, index) => {\n        if (index > NUMBER_OF_PREVIEW_IMAGES - 1) {\n            return null;\n        }\n        return <ImageCard key={image.id} image={image} />\n    });\n\n    const imageCount = images.length > 0 \n        ? <h3 className=\"ui blue centered header\">{images.length} images found! Here's the first 4:</h3> \n        : props.term\n            ? <h3 className=\"ui blue centered header\">No \"{props.term}\" images found.</h3>\n            : <h2 className=\"ui blue centered header\">. . .</h2>;\n\n    return IMAGES.length > 0 \n        ? <Gallery images={IMAGES} enableImageSelection={false}  />\n        : null;\n}\n\nexport default ImageList;\n\n// <div className=\"ui attached stackable container\">\n            // <h1 className=\"ui blue centered header\">Image Preview</h1>\n            // {imageCount}\n            // {/* <div className=\"ui stackable padded two column grid\"> */}\n                // {/* {renderImages} */}\n            // {/* </div> */}\n        // </div>","import React, { Component } from 'react'\nimport '../styles/zip.css'\nimport JSZip from 'jszip'\nimport JSZipUtils from 'jszip-utils'\nimport { render } from 'react-dom';\nimport { saveAs } from 'save-as';\nimport unsplash from '../api/unsplash';\nimport {Button} from 'semantic-ui-react'\n\nconst zipFilename = \"images-cynamonster.zip\";\n\nexport default class Zip extends React.Component {\n    state = {\n        loading: false\n    };\n\n    urlZip = () => {\n        this.setState({\n            loading: true\n        });\n\n        const {images, searchTerm} = this.props;\n        const formattedSearchTerm = searchTerm.replace(' ','-');\n\n        var zip = new JSZip();\n        var count = 0;\n        var zipFilename = images.length + \"_\" + formattedSearchTerm + \"_images.zip\";\n        var urls = this.getUrls();\n      \n        urls.forEach(function(url, index){\n            var filename = formattedSearchTerm + \"_\" + (index + 1) + '.png';\n            // loading a file and add it in a zip file\n            unsplash.get(url)\n                .then(res => {\n                    JSZipUtils.getBinaryContent(res.data.url, function (err, data) {\n                        if(err) {\n                            throw err; // or handle the error\n                        }\n                        zip.file(filename, data, {binary:true});\n                        count++;\n                        if (count == urls.length) {\n                            zip.generateAsync({type:'blob'}).then(function(content) {\n                                saveAs(content, zipFilename);\n                            });\n                        }\n                    });\n                })\n        })\n\n        setTimeout(() => {\n            this.setState({\n                loading: false\n            });\n        }, 2000)\n    };\n\n    getUrls = () => {\n        const {images} = this.props;\n\n        let urls = [];\n        images.map((image) => {\n            urls.push(image.links.download_location);\n        });\n\n        return urls;\n    }\n\n    getLargeUrls = () => {\n        const {images} = this.props;\n\n        let urls = [];\n        images.map((image) => {\n            urls.push(image.urls.thumb);\n        });\n\n        return urls;\n    }\n\n    getFileName = () => {\n        const {searchTerm, images} = this.props;\n        return images.length + '_' + searchTerm + '_images';\n    }\n\n    render() {\n        const buttonIcon = !this.props.images.length > 0\n            ? ''\n            : 'download';\n        const buttonContent = !this.props.images.length > 0\n            ? 'Search Images...'\n            : ' Download Zip'\n\n        return (\n            <Button \n                fluid\n                loading={this.state.loading}\n                positive\n                disabled={!this.props.images.length > 0}\n                icon={buttonIcon}\n                size='big'\n                content={buttonContent}\n                onClick={this.urlZip}\n            />\n        )\n    }\n        // <div className=\"ui labeled fluid button\" tabIndex=\"0\" onClick={urlZip}>\n        //     <div className=\"ui red button\" style={{height: 'unset'}}>\n        //         <i className=\"download icon\"></i> Large\n        //     </div>\n        //     <a className=\"ui basic red left pointing label\">\n        //         1,048 mb\n        //     </a>\n        // </div>\n};","import React from 'react';\nimport unsplash from '../api/unsplash';\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\nimport Zip from './Zip';\nimport {Button, Icon} from 'semantic-ui-react'\n\nimport {Container, Grid, Header, Segment} from 'semantic-ui-react'\n// import '../styles/styles.css';\n\n\nclass App extends React.Component {\n    state = {\n        images: [],\n        searchTerm: '',\n        desiredNumberOfImages: null\n    };\n\n    onSearchSubmit = (term, number) => {\n        this.setState({\n            searchTerm: term,\n            desiredNumberOfImages: number\n        }, () => {\n            unsplash.get('search/photos', {\n                params: {\n                    query: term,\n                    per_page: this.state.desiredNumberOfImages\n                }\n            }).then((response) => {\n                console.log(response)\n                this.setState({ images: response.data.results });\n            });\n        });\n    };\n\n    handleNumberChange = (event, data) => {\n        console.log(event)\n        console.log(data)\n    }\n\n    onNumberValueChange = e => { \n        const {value} = e.target;\n        if (value > 200) {\n            this.setState({ desiredNumberOfImages: 200 })\n        } else {\n            this.setState({ desiredNumberOfImages: value })\n        }\n    }\n    // user chooses how many images they want to download\n    // user chooses what size photos they want : thumbnails, small, medium, large, raw\n    // that many images are queried, using user search query, and bundled into a zip.\n    // user downloads zip file\n\n    text = {\n        headerText: 'Bulk Image Gallery For Designers & Developers',\n        subheaderText: 'Digital Creators Need Placeholders For Their Web Projects – Search Below and Download Up to 200 Images'\n    };\n\n    \n    render() {\n        return(\n            <Container>\n                <Segment textAlign='center' inverted>\n\n                </Segment>\n                <Segment padded='very' textAlign='center' inverted>\n                    <Header inverted as='h1'>{this.text.headerText}</Header>\n                    <p style={{color: '#fff'}}>{this.text.subheaderText}</p>\n                </Segment>\n\n                <Segment textAlign='center' inverted>\n                    <SearchBar onSubmission={this.onSearchSubmit} number={this.state.desiredNumberOfImages} />\n                </Segment>\n\n                <Segment textAlign='center' inverted>\n                    <Zip images={this.state.images} searchTerm={this.state.searchTerm} />\n                </Segment>\n\n                \n                <Segment textAlign='center' inverted>\n                    {/* <p style={{color: '#fafafa'}}>{ this.state.images.length ? ` Here's the first 2 images found:` : null }</p> */}\n                    <Header content={this.state.images.length > 0 ? 'Image Preview:' : ''} as='h2' />\n                    <ImageList images={this.state.images} term={this.state.searchTerm} />\n                </Segment>\n\n                \n            </Container>\n            // <div className=\"ui very padded container segment inverted\">\n            //     <h1 className=\"ui header blue\">PicZippr</h1>\n            //     <div className=\"ui stackable container\">\n            //         <div className=\"row\">\n            //             {/* <div className=\"ui container\"> */}\n            //             {/* </div> */}\n\n            //                 <div className=\"ui two column container inverted\">\n            //                     <div className=\"column\">\n            //                         <div className=\"ui input\">\n            //                             <input type=\"number\" \n            //                                 placeholder=\"How many photos?\"\n            //                                 value={this.state.desiredNumberOfImages} \n            //                                 onChange={(e) => this.onNumberValueChange(e)} \n            //                                 max=\"200\"\n            //                             />\n            //                         </div>\n            //                     </div>\n\n            //                     <div className=\"column\">\n            \n            //                     </div>\n            //                 </div>\n\n            //             <div className=\"column\">\n                            // <p style={{color: '#fafafa'}}>{ this.state.images.length ? ` Here's the first 2 images found:` : null }</p>\n                            // <ImageList images={this.state.images} term={this.state.searchTerm} />\n            //             </div>\n            //         </div>\n            //     {/* </div> */}\n            // </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// components\nimport App from './components/App';\n\nReactDOM.render( <App />, document.querySelector('#root'));"],"sourceRoot":""}